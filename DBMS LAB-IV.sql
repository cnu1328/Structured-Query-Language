use srinu;

create table categories(category_id int NOT NULL,
						category_name varchar(10) NOT NULL,
                        primary key(category_id));



create table productss(product_id int not null,
						product_name varchar(20) not null, 
                        price int not null, 
						category_id int not null,
						primary key(product_id), 
						constraint fk_category foreign key(category_id) references categories(category_id));
                     
create table oders(order_id int not null,
				   customer_name varchar(20) not null,
                   product_id int, 
					quantity int not null, 
                    order_date date not null, 
                    primary key(order_id),
                    constraint fk_order foreign key(product_id) references productss(product_id));
                    
                    
insert into categories values(1,"Mobile"),
							 (2,"Laptop"), 
                             (3,"Shoes");

select * from categories;

select * from productss;

insert into productss values(1,"iPhone", 999, 1),
							(2,"Samsung", 899, 1),
                            (3,"LG", 699, 1),
                            (4,"DELL", 799, 2),
                            (5,"HP", 599, 2),
                            (6,"Lenovo", 699, 2),
                            (7,"Nike", 149, 3),
                            (8,"Adida", 129, 3),
                            (9,"Puma", 109, 3);
                            
select * from productss;
select * from oders;
-- insert into productss values(11,"",292,null);

insert into oders values(1,"John Smith", 1, 2, "2022-01-01"),
						  (2,"Lisa Jnoes", 4, 1, "2022-01-01"),
                          (3,"Mike Brown", 7, 3, "2022-01-01"),
                          (4,"Sarah Lee", 2, 1, "2022-01-01"),
                          (5,"Tom Davis", 3, 4, "2022-01-01");
                          
                          
select * from oders;



 --  alter table produts add primary key(product_id);
--  alter table productss categories ad primary key(category_id);
 --  alter table products orders add primary key(order_id);
  --  alter table produts add foreign key(category_id) references categorie(category_id);
   --  alter table orders add foreign key(product_id) references products(product_id);
   
   
select count(*) from productss where category_id = 1;

select * from productss;
select * from categories;

-- 1. How many products do we have in the mobile category?

select count(*) from productss join categories 
					on productss.category_id = categories.category_id 
                    where categories.category_name = 'mobile';
		
-- 2. What is the name of the most expensive product? 

select product_name from productss order by price desc limit 1;

select product_name from productss where price = (select max(price) from productss);

-- 3. What is the name of the cheapest product?

select product_name from productss order by price limit 1;

select product_name from productss where price = (select min(price) from productss);

-- 4. What is the average price of products in the laptop category? 

select avg(price) from productss where category_id="2";

select avg(price) from productss join categories 
				  on productss.category_id = categories.category_id
                  where categories.category_name = "laptop";
                  
select * from oders;

-- 5. What is the total quantity of all orders? 

select sum(quantity) from oders;

-- 6. What is the total amount of all orders?

select sum(price*quantity) from oders join productss
				  on oders.product_id = productss.product_id;

-- 7. What is the name of the customer who made the largest order? 

select customer_name from oders where quantity = (select max(quantity) from oders);
select customer_name from oders order by quantity desc limit 1;

-- 8. What is the name of the customer who made the smallest order? 
select customer_name from oders where quantity = (select min(quantity) from oders);
select customer_name from oders order by quantity limit 1;

-- 9. What is the total quantity of each product sold? 
select product_name, sum(quantity) as s from oders
join productss
on productss.product_id = oders.product_id
group by oders.product_id order by s desc;

select productss.product_name, sum(oders.quantity) as total_quantity
from productss inner join oders 
on productss.product_id = oders.product_id
group by oders.product_id
order by total_quantity desc;

-- 10. What is the total amount of revenue generated by each product? (ONLY_FULL_GROUP_BY) SQL mode
select product_name, sum(quantity*price) as tr from productss
join oders 
on productss.product_id = oders.product_id
group by oders.product_id;

select productss.product_name, oders.quantity*price as total_revenue
from productss inner join oders
on productss.product_id = oders.product_id
group by oders.product_id, oders.quantity;

--  11. What is the name of the customer who bought the most quantity of products?
select customer_name, sum(quantity) as most_quantity
from oders
group by customer_name 
order by most_quantity desc
limit 1;

-- 12. What is the name of the customer who bought the least quantity of products?

select customer_name, sum(quantity) as least_quantity
from oders
group by customer_name
order by least_quantity limit 1; 

-- 13. What is the total quantity of products sold in the mobile category? 
select categories.category_name, sum(oders.quantity) from oders
inner join productss on productss.product_id = oders.product_id
inner join categories on categories.category_id = productss.category_id
where categories.category_name = 'mobile';
-- group by categories.category_name;

-- 14. What is the total quantity of products sold in the laptop category? 
select categories.category_name, sum(oders.quantity) as total_quantity from oders
inner join productss on productss.product_id = oders.product_id
inner join categories on productss.category_id = categories.category_id
where categories.category_name = 'laptop';
-- group by categories.category_name;

-- 15. What is the total quantity of products sold in the shoes category?
select categories.category_name, sum(oders.quantity) from oders
inner join productss on productss.product_id = oders.product_id
inner join categories on categories.category_id = productss.product_id
where categories.category_name = 'shoes'
group by categories.category_name;

-- 16. What is the total revenue generated by products sold in the mobile category? 
select categories.category_name, sum(oders.quantity*productss.price) from oders
inner join productss on productss.product_id = oders.product_id
inner join categories on categories.category_id = productss.category_id
where categories.category_name = 'mobile';
-- group by categories.category_name;

-- 17. What is the total revenue generated by products sold in the laptop category?
select categories.category_name, sum(oders.quantity*productss.price) from oders
inner join productss on productss.product_id = oders.product_id
inner join categories on categories.category_id = productss.category_id
where categories.category_name = 'laptop'
group by categories.category_name;

-- 18. What is the total revenue generated by products sold in the shoes category?
select categories.category_name, sum(oders.quantity*productss.price) from oders
inner join productss on productss.product_id = oders.product_id
inner join categories on categories.category_id = productss.product_id
where categories.category_name = 'shoes'
group by categories.category_name;

-- 19. What is the name of the customer who bought the most expensive product?
select customer_name, price from oders
inner join productss on productss.product_id = oders.product_id
order by price desc limit 1;

select customer_name, price from oders
inner join productss on productss.product_id = oders.product_id
where price = (select max(price) from productss);

-- 20. What is the name of the customer who bought the cheapest product?
 select customer_name, price from oders
 inner join productss on productss.product_id = oders.product_id
 where price = (select min(price) from productss);
 
 -- 21. What is the name of the customer who made the first order?
select customer_name from oders order by order_date asc limit 1;

-- 22. What is the name of the customer who made the last order?
select customer_name from oders order by order_date desc limit 1;
 
 --  23. What is the name of the customer who made the order on '2022-01-03'?
 
select customer_name from oders where order_date = '2022-01-03';

-- 24. What is the name of the customer who ordered the product with ID 3?
select customer_name from oders where product_id = 3; 

-- 25. What is the average quantity of products sold per order? 
select avg(quantity) from oders;


 
select * from oders;
select * from productss;


